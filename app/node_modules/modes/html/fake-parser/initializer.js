var realInitializer = require('pegjs-parser/initializer')



function empty() {}



var FakeNode = {
	add: empty,
	addList: empty,
	flag: empty,
	set: empty,
	childrenIndex: {id: null}
}



var fakeNodeInstancierInstance = function() {
	return FakeNode;
}
fakeNodeInstancierInstance.addHook = empty;



var FakeNodeInstancier = function() {
	return fakeNodeInstancierInstance;
}



module.exports = import$(clone$(realInitializer), {NodeInstancier: FakeNodeInstancier});

function import$(obj, src) {
	var own = {}.hasOwnProperty;
	for (var key in src)
		if (own.call(src, key))
			obj[key] = src[key];
	return obj;
}
function clone$(it) {
	function fun() {}
	fun.prototype = it;
	return new fun;
}
