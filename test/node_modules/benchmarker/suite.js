var prelude = require('prelude-ls');
var colour = require('colour');

var oop = require('oop').oop;
var helpers = require('./helpers');

var Benchmark = require('./benchmark').Benchmark;



// -----------------------------------------------------------------------------

colour.setTheme({
	start: ['magenta', 'bold'],
	end: ['green', 'bold'],

	name: ['cyan', 'bold'],
	delimiter: ['cyan', 'bold'],

	error: ['red', 'bold']
});



// -----------------------------------------------------------------------------

var Suite = oop.Class({
	name: 'Suite',

	description: 'A suite of benchmarks',

	schema: {
		properties: [
			// Suite identification / description
			{names: ['name', 'id', 'ID'], required: true},
			{names: ['description', 'desc', 'doc', 'documentation', 'explanation'], required: false},

			// Benchmarks
			{names: ['benchmarks', 'benchmark', 'bench', 'benchs', 'tests', 'test'], type: oop.types.Array, default: []}
		]
	},

	init: function() {
		this.benchmarks = prelude.map(function(input) {
			return Benchmark.factory(input);
		}, this.benchmarks);
	},

	statics: {
		logBenchmark: function(result) {
			var output = '';

			var benchmark = result.benchmark;

			var stats = result.stats;

			output += "(";
			output += "executed " + stats.executions + " " + helpers.pluralize("time", stats.executions);
			output += " in " + helpers.humanizeDuration(stats.total / 1000);
			output += ")";
			output += '\n';

			output += "Mean time: " + helpers.humanizeDuration(stats.mean_s) + " (" + helpers.truncateNumber(stats.ops_s) + " ops/s).";

			output += '\n';

			console.log(output);
		}
	},

	proto: {
		run: function(log) {
			log = !!log;

			if (log) {
				console.log(helpers.completeLine(this.name, {width: 80}).start);
			}

			var result;
			try {
				result = helpers.map(function(benchmark, index, benchmarks) {
					if (log) {
						console.log(benchmark.name.name);
					}

					var benchmarkResult;
					try {
						benchmarkResult = benchmark.run();
					}
					catch (exception) {
						console.error("An error occured: ".error);
						console.error(exception);
						return null;
					}

					var result = {
						result: benchmarkResult,
						stats: Benchmark.computeStats(benchmarkResult),
						benchmark: benchmark
					};

					if (log) {
						Suite.logBenchmark(result);
						if (index < benchmarks.length - 1) {
							console.log(helpers.completeLine('', {addSpace: false, width: 40}).delimiter);
						}
					}

					return result;
				}, this.benchmarks);
			} catch (exception) {}

			if (log) {
				console.log(helpers.completeLine('', {addSpace: false, width: 80}).end);
			}

			return {
				result: result,
				suite: this
			};
		}
	}
});



exports.Suite = Suite;
